{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas) {\r\n        \r\n       const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n       const dias = document.querySelectorAll('[name=\"dia\"]');\r\n       const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n       const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n       categoria.addEventListener('change', terminoBusqueda) \r\n       dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n       let busqueda = {\r\n        categoria_id: +categoria.value || '',\r\n        dia: +inputHiddenDia.value || ''\r\n           } \r\n\r\n        if(!Object.values(busqueda).includes('')) {\r\n            (async() => {\r\n                await buscarEventos();\r\n                \r\n                const id = inputHiddenHora.value;\r\n                    //Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })()\r\n        }\r\n\r\n       function terminoBusqueda(e) {\r\n\r\n        busqueda[e.target.name] = e.target.value;\r\n\r\n        //Reiniciar los campos ocultos y selector de horas\r\n        inputHiddenHora.value = '';\r\n        inputHiddenDia.value = '';\r\n        const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n              }\r\n\r\n        \r\n            if(Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n            buscarEventos();\r\n        }\r\n\r\n       async function buscarEventos() {\r\n          const {dia, categoria_id} = busqueda \r\n          const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n          \r\n          const resultado = await fetch(url);\r\n          const eventos = await resultado.json();\r\n\r\n         \r\n          \r\n          obtenerHorasDisponibles(eventos);\r\n       }\r\n\r\n       function obtenerHorasDisponibles(eventos) {\r\n        //Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li=> li.classList.add('horas__hora--deshabilitada'))\r\n        \r\n        // Comprobar eventos ya tomados, y quitar la varibale de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'))\r\n\r\n            const HorasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            HorasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n       }\r\n\r\n       function seleccionarHora(e) {\r\n\r\n            //Desabilitar hora previa\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n                if(horaPrevia) {\r\n                    horaPrevia.classList.remove('horas__hora--seleccionada')\r\n                 }\r\n\r\n            //Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada')\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n            //Llenar campo oculto de ID\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n       }\r\n    }\r\n})();","(function(){\r\n    \r\n    const ponentesInput = document.querySelector('#ponentes');\r\n    \r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n       \r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n        if(ponenteHidden.value) {\r\n            (async() => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value)\r\n\r\n                const { nombre, apellido } = ponente\r\n\r\n                //Insertar en el HTML\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`\r\n\r\n                listadoPonentes.appendChild(ponenteDOM)\r\n            })()\r\n        }\r\n       \r\n        async function obtenerPonentes() {\r\n           const url = `/api/ponentes`;\r\n           const respuesta = await fetch(url);\r\n           const resultado = await respuesta.json();\r\n           formatearPonentes(resultado)\r\n        }\r\n\r\n        async function obtenerPonente(id){\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url)\r\n            const resultado = await respuesta.json()\r\n            return resultado;\r\n        }\r\n        \r\n        function formatearPonentes(arrayPonentes = []) {\r\n            \r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                        id: ponente.id\r\n                }\r\n            }) \r\n         } \r\n\r\n        function buscarPonentes(e) {\r\n                const busqueda = e.target.value;\r\n            if(busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente\r\n                    }\r\n                })\r\n             } else {\r\n                ponentesFiltrados = []\r\n             }\r\n             mostrarPonentes();\r\n         }\r\n\r\n         function mostrarPonentes() {\r\n            \r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n            } if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id\r\n                    ponenteHTML.onclick = seleccionarPonente\r\n                    // Anadir al don\r\n                    listadoPonentes.appendChild(ponenteHTML)\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P')\r\n                noResultados.classList.add('listado-ponentes__noresultado');\r\n                noResultados.textContent = 'No Hay Resultado Para Tu Busqueda.'\r\n                listadoPonentes.appendChild(noResultados)\r\n            }   \r\n          }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n            // remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\r\n            if(ponentePrevio){\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\r\n            }\r\n                ponente.classList.add('listado-ponentes__ponente--seleccionado')\r\n                ponenteHidden.value = ponente.dataset.ponenteId\r\n          }\r\n       }\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input')\r\n\r\n    if(tagsInput){\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e){\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta)\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()\r\n"]}