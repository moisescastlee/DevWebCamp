{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentes","respuesta","arrayPonentes","ponente","nombre","trim","apellido","id","console","log","formatearPonentes","obtenerPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBACAC,EAAAR,SAAAC,cAAA,mBACAQ,EAAAT,SAAAC,cAAA,oBAKA,SAAAS,EAAAC,GAEAT,EAAAS,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAGAL,EAAAK,MAAA,GACAN,EAAAM,MAAA,GACA,MAAAC,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAIAC,OAAAC,OAAAjB,GAAAkB,SAAA,KAMAC,iBACA,MAAAjB,IAAAA,EAAAD,aAAAA,GAAAD,EACAoB,EAAA,+BAAAlB,kBAAAD,IAEAoB,QAAAC,MAAAF,IAQA,SAAAG,GAEA,MAAAC,EAAA1B,SAAAO,iBAAA,aACAmB,EAAAC,QAAAC,GAAAA,EAAAZ,UAAAa,IAAA,+BAGA,MAAAC,EAAAL,EAAAM,IAAAC,GAAAA,EAAAC,SACAC,EAAAC,MAAAC,KAAAV,GAEAQ,EAAAG,OAAAT,IAAAE,EAAAV,SAAAQ,EAAAU,QAAAC,SACAZ,QAAAC,GAAAA,EAAAZ,UAAAC,OAAA,+BAEAjB,SAAAO,iBAAA,8CACAoB,QAAAa,GAAAA,EAAAC,iBAAA,QAAAC,IAhBAC,OAJApB,EAAAqB,QARAC,GA+BA,SAAAH,EAAA/B,GAGA,MAAAI,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAIAN,EAAAC,OAAAI,UAAAa,IAAA,6BACApB,EAAAK,MAAAH,EAAAC,OAAA0B,QAAAC,OAEA/B,EAAAM,MAAAd,SAAAC,cAAA,wBAAAa,MA9DAT,EAAAoC,iBAAA,SAAA/B,GACAJ,EAAAqB,QAAAvB,GAAAA,EAAAqC,iBAAA,SAAA/B,KAfA,GCCA,WAGA,GAFAV,SAAAC,cAAA,aAEA,CACA,IAAA6C,EAAA,IAKAzB,iBACA,MACA0B,QAAAvB,MADA,kBAOA,SAAAwB,EAAA,IACAF,EAAAE,EAAAjB,IAAAkB,IACA,CACAC,OAAA,GAAAD,EAAAC,OAAAC,UAAAF,EAAAG,SAAAD,SACAE,GAAAJ,EAAAI,MAGAC,QAAAC,IAAAT,GAVAU,OAFAT,EAAAH,QALAa,IAPA,GCDA,WACA,MAAAC,EAAA1D,SAAAC,cAAA,eAEA,GAAAyD,EAAA,CAEA,MAAAC,EAAA3D,SAAAC,cAAA,SACA2D,EAAA5D,SAAAC,cAAA,iBAEA,IAAA4D,EAAA,GAwBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAlC,QAAAqC,IACA,MAAAC,EAAAjE,SAAAkE,cAAA,MACAD,EAAAjD,UAAAa,IAAA,mBACAoC,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAEAK,IAGA,SAAAF,EAAAzD,GACAA,EAAAC,OAAAK,SACA4C,EAAAA,EAAAxB,OAAA2B,GAAAA,IAAArD,EAAAC,OAAAmD,aACAO,IAGA,SAAAA,IACAV,EAAA9C,MAAA+C,EAAAU,WAxCA,KAAAX,EAAA9C,QACA+C,EAAAD,EAAA9C,MAAA0D,MAAA,KACAV,KAIAJ,EAAAjB,iBAAA,YAEA,SAAA9B,GACA,GAAA,KAAAA,EAAA8D,QAAA,CACA,GAAA,KAAA9D,EAAAC,OAAAE,MAAAqC,QAAAxC,EAAAC,OAAAE,MAAA,EACA,OAEAH,EAAA+D,iBACAb,EAAA,IAAAA,EAAAlD,EAAAC,OAAAE,MAAAqC,QACAO,EAAA5C,MAAA,GAEAgD,SA5BA","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n       const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n       const dias = document.querySelectorAll('[name=\"dia\"]');\r\n       const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n       const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n       categoria.addEventListener('change', terminoBusqueda) \r\n       dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n       function terminoBusqueda(e) {\r\n\r\n        busqueda[e.target.name] = e.target.value;\r\n\r\n        //Reiniciar los campos ocultos y selector de horas\r\n        inputHiddenHora.value = '';\r\n        inputHiddenDia.value = '';\r\n        const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n              }\r\n\r\n        \r\n        if(Object.values(busqueda).includes('')) {\r\n                return\r\n          }\r\n            buscarEventos();\r\n        }\r\n\r\n       async function buscarEventos() {\r\n          const {dia, categoria_id} = busqueda \r\n          const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n          \r\n          const resultado = await fetch(url);\r\n          const eventos = await resultado.json();\r\n\r\n         \r\n          \r\n          obtenerHorasDisponibles(eventos);\r\n       }\r\n\r\n       function obtenerHorasDisponibles(eventos) {\r\n        //Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li=> li.classList.add('horas__hora--deshabilitada'))\r\n        \r\n        // Comprobar eventos ya tomados, y quitar la varibale de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'))\r\n\r\n            const HorasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            HorasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n       }\r\n\r\n       function seleccionarHora(e) {\r\n\r\n            //Desabilitar hora previa\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n                if(horaPrevia) {\r\n                    horaPrevia.classList.remove('horas__hora--seleccionada')\r\n                 }\r\n\r\n            //Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada')\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n            //Llenar campo oculto de ID\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n       }\r\n    }\r\n})();","\r\n(function() {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n \r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n \r\n        obtenerPonentes();\r\n \r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n          \r\n            formatearPonentes(resultado)\r\n        }\r\n\r\n        function formatearPonentes (arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n                console.log(ponentes)\r\n        }\r\n    }\r\n\r\n\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input')\r\n\r\n    if(tagsInput){\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e){\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta)\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()\r\n"]}