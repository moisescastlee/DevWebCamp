{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","Object","values","includes","async","buscarEventos","id","horaSeleccionada","classList","remove","add","iniciarApp","e","target","name","horaPrevia","url","resultado","fetch","eventos","listadoHoras","li","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\n    const horas = document.querySelector('#horas')\n\n    if(horas) {\n        \n       const categoria = document.querySelector('[name=\"categoria_id\"]');\n       const dias = document.querySelectorAll('[name=\"dia\"]');\n       const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n       const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n       categoria.addEventListener('change', terminoBusqueda) \n       dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\n\n       let busqueda = {\n        categoria_id: +categoria.value || '',\n        dia: +inputHiddenDia.value || ''\n           } \n\n        if(!Object.values(busqueda).includes('')) {\n            async function iniciarApp() {\n                await buscarEventos();\n\n                const id = inputHiddenHora.value;\n    \n                //Resaltar la hora actual\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\n    \n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\n                \n            }\n           iniciarApp();\n        }\n\n       function terminoBusqueda(e) {\n\n        busqueda[e.target.name] = e.target.value;\n\n        //Reiniciar los campos ocultos y selector de horas\n        inputHiddenHora.value = '';\n        inputHiddenDia.value = '';\n        const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n            if(horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n              }\n\n        \n            if(Object.values(busqueda).includes('')) {\n                return\n            }\n            buscarEventos();\n        }\n\n       async function buscarEventos() {\n          const {dia, categoria_id} = busqueda \n          const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n          \n          const resultado = await fetch(url);\n          const eventos = await resultado.json();\n\n         \n          \n          obtenerHorasDisponibles(eventos);\n       }\n\n       function obtenerHorasDisponibles(eventos) {\n        //Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li=> li.classList.add('horas__hora--deshabilitada'))\n        \n        // Comprobar eventos ya tomados, y quitar la varibale de deshabilitado\n            const horasTomadas = eventos.map( evento => evento.hora_id);\n            const listadoHorasArray = Array.from(listadoHoras);\n            \n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'))\n\n            const HorasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            HorasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\n       }\n\n       function seleccionarHora(e) {\n\n            //Desabilitar hora previa\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n                if(horaPrevia) {\n                    horaPrevia.classList.remove('horas__hora--seleccionada')\n                 }\n\n            //Agregar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada')\n            inputHiddenHora.value = e.target.dataset.horaId\n            //Llenar campo oculto de ID\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\n       }\n    }\n})();","(function(){\n    \n    const ponentesInput = document.querySelector('#ponentes');\n    \n    if(ponentesInput) {\n        let ponentes = [];\n        let ponentesFiltrados = [];\n       \n        const listadoPonentes = document.querySelector('#listado-ponentes');\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\n\n        obtenerPonentes();\n        ponentesInput.addEventListener('input', buscarPonentes)\n       \n        async function obtenerPonentes() {\n           \n           const url = `/api/ponentes`;\n           const respuesta = await fetch(url);\n           const resultado = await respuesta.json();\n            \n           formatearPonentes(resultado)\n        }\n        \n        function formatearPonentes(arrayPonentes = []) {\n            \n            ponentes = arrayPonentes.map( ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                        id: ponente.id\n                }\n            }) \n         } \n\n        function buscarPonentes(e) {\n          \n                const busqueda = e.target.value;\n            if(busqueda.length > 3) {\n                const expresion = new RegExp(busqueda, \"i\");\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\n                        return ponente\n                    }\n                })\n             } else {\n                ponentesFiltrados = []\n             }\n             mostrarPonentes();\n         }\n\n         function mostrarPonentes() {\n            \n            while(listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\n            } if(ponentesFiltrados.length > 0) {\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id\n                    ponenteHTML.onclick = seleccionarPonente\n                    // Anadir al don\n                    listadoPonentes.appendChild(ponenteHTML)\n                })\n            } else {\n                const noResultados = document.createElement('P')\n                noResultados.classList.add('listado-ponentes__noresultado');\n                noResultados.textContent = 'No Hay Resultado Para Tu Busqueda.'\n                listadoPonentes.appendChild(noResultados)\n            }   \n          }\n\n        function seleccionarPonente(e) {\n            \n            const ponente = e.target;\n\n            // remover la clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\n            \n            if(ponentePrevio){\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n                ponente.classList.add('listado-ponentes__ponente--seleccionado')\n\n                ponenteHidden.value = ponente.dataset.ponenteId\n          }\n       }\n})();","(function() {\n    const tagsInput = document.querySelector('#tags_input')\n\n    if(tagsInput){\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n\n        //Recuperar del input oculto\n        if(tagsInputHidden.value !== '') {\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        //Escuchar los cambios\n        tagsInput.addEventListener('keypress', guardarTag)\n\n        function guardarTag(e){\n            if(e.keyCode === 44) {\n                if(e.target.value.trim() === '' || e.target.value < 1) {\n                    return\n                }\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag')\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag\n                tagsDiv.appendChild(etiqueta)\n            })\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove()\n            tags = tags.filter(tag => tag !== e.target.textContent)\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})()\n"]}