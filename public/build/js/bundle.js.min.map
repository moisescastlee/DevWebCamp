{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenHora","terminoBusqueda","e","target","name","value","Object","values","includes","async","url","resultado","fetch","eventos","horasTomadas","map","evento","hora_id","listadoHoras","listadoHorasArray","Array","from","filter","li","dataset","horaId","forEach","classList","remove","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","horaPrevia","add","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBAEAC,GADAR,SAAAC,cAAA,mBACAD,SAAAC,cAAA,qBAKA,SAAAQ,EAAAC,GACAR,EAAAQ,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MACAC,OAAAC,OAAAb,GAAAc,SAAA,KAMAC,iBACA,MAAAb,IAAAA,EAAAD,aAAAA,GAAAD,EACAgB,EAAA,+BAAAd,kBAAAD,IAEAgB,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAAD,EAAAE,IAAAC,GAAAA,EAAAC,SAEAC,EAAA1B,SAAAO,iBAAA,aACAoB,EAAAC,MAAAC,KAAAH,GAEAC,EAAAG,OAAAC,IAAAT,EAAAN,SAAAe,EAAAC,QAAAC,SACAC,QAAAH,GAAAA,EAAAI,UAAAC,OAAA,+BAEApC,SAAAO,iBAAA,8CACA2B,QAAAG,GAAAA,EAAAC,iBAAA,QAAAC,IAdAC,OAFArB,EAAAsB,QARAC,GA2BA,SAAAH,EAAA7B,GAGA,MAAAiC,EAAA3C,SAAAC,cAAA,8BACA0C,GACAA,EAAAR,UAAAC,OAAA,6BAIA1B,EAAAC,OAAAwB,UAAAS,IAAA,6BACApC,EAAAK,MAAAH,EAAAC,OAAAqB,QAAAC,OA7CA5B,EAAAiC,iBAAA,SAAA7B,GACAH,EAAA4B,QAAA9B,GAAAA,EAAAkC,iBAAA,SAAA7B,KAfA,GCAA,WACA,MAAAoC,EAAA7C,SAAAC,cAAA,eAEA,GAAA4C,EAAA,CAEA,MAAAC,EAAA9C,SAAAC,cAAA,SACA8C,EAAA/C,SAAAC,cAAA,iBAEA,IAAA+C,EAAA,GAwBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAd,QAAAiB,IACA,MAAAC,EAAApD,SAAAqD,cAAA,MACAD,EAAAjB,UAAAS,IAAA,mBACAQ,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAEAK,IAGA,SAAAF,EAAA7C,GACAA,EAAAC,OAAAyB,SACAY,EAAAA,EAAAlB,OAAAqB,GAAAA,IAAAzC,EAAAC,OAAAuC,aACAO,IAGA,SAAAA,IACAV,EAAAlC,MAAAmC,EAAAU,WAxCA,KAAAX,EAAAlC,QACAmC,EAAAD,EAAAlC,MAAA8C,MAAA,KACAV,KAIAJ,EAAAP,iBAAA,YAEA,SAAA5B,GACA,GAAA,KAAAA,EAAAkD,QAAA,CACA,GAAA,KAAAlD,EAAAC,OAAAE,MAAAgD,QAAAnD,EAAAC,OAAAE,MAAA,EACA,OAEAH,EAAAoD,iBACAd,EAAA,IAAAA,EAAAtC,EAAAC,OAAAE,MAAAgD,QACAhB,EAAAhC,MAAA,GAEAoC,SA5BA","file":"bundle.js","sourcesContent":["(function (){\n    const horas = document.querySelector('#horas')\n\n    if(horas) {\n        let busqueda = {\n            categoria_id: '',\n            dia: ''\n        }\n\n       const categoria = document.querySelector('[name=\"categoria_id\"]');\n       const dias = document.querySelectorAll('[name=\"dia\"]');\n       const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n       const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n       categoria.addEventListener('change', terminoBusqueda) \n       dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\n\n       function terminoBusqueda(e) {\n        busqueda[e.target.name] = e.target.value;\n        if(Object.values(busqueda). includes('')){\n            return\n          }\n            buscarEventos();\n        }\n\n       async function buscarEventos() {\n          const {dia, categoria_id} = busqueda \n          const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n          \n          const resultado = await fetch(url);\n          const eventos = await resultado.json();\n          \n          obtenerHorasDisponibles(eventos);\n       }\n\n       function obtenerHorasDisponibles(eventos) {\n        // Comprobar eventos ya tomados, y quitar la varibale de deshabilitado\n            const horasTomadas = eventos.map( evento => evento.hora_id);\n            \n            const listadoHoras = document.querySelectorAll('#horas li');\n            const listadoHorasArray = Array.from(listadoHoras);\n            \n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'))\n\n            const HorasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            HorasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\n       }\n\n       function seleccionarHora(e) {\n\n            //Desabilitar hora previa\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n                if(horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n                 }\n\n            //Agregar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada')\n            inputHiddenHora.value = e.target.dataset.horaId\n       }\n\n\n    }\n})();","(function() {\n    const tagsInput = document.querySelector('#tags_input')\n\n    if(tagsInput){\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n\n        //Recuperar del input oculto\n        if(tagsInputHidden.value !== '') {\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        //Escuchar los cambios\n        tagsInput.addEventListener('keypress', guardarTag)\n\n        function guardarTag(e){\n            if(e.keyCode === 44) {\n                if(e.target.value.trim() === '' || e.target.value < 1) {\n                    return\n                }\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag')\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag\n                tagsDiv.appendChild(etiqueta)\n            })\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove()\n            tags = tags.filter(tag => tag !== e.target.textContent)\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})()\n"]}